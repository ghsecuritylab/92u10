#!/bin/sh
####################################################################
#
# WLAN Initialization script
#
# This script will initialize the wlan modules required for operation
# of the AP hardware.  There are several environmental variables that
# can be set to modify the operation of the AP.  These are set to
# default values (or not used) if not defined.  Parameters are:
#
#  DFS_domainoverride   0=Unitialized (default),
#                       1=FCC Domain (FCC3, US)
#                       2=ETSI Domain (Europe)
#                       3=Japan Domain
#  DFS_usenol           1=Use channel NOL (default)
#  ATH_countrycode      Set Country Code (  Override the use of channel NOL
#                       Override default country code (-1 auto, default)
#                       Use country code 0x1ff for demo channels
#
###################################################################
. /etc/ath/apcfg

###################################################################
## Function to unload all modules
###################################################################

_ath_unload()
{
    #
    # Determine if the modules are already down.  If so, simply
    # exit without error.
    #

    MODLIST=`lsmod | grep adf`

    if [ "${MODLIST}" == "" ]; then
        exit 0
        fi

#remove offload modules
    rmmod atd.ko
    rmmod fwd.ko
    rmmod hif_${BUS}.ko

#remove finally the common adf module
    rmmod adf.ko
    sleep 2

}

KVER=`uname -r | cut -f 1 -d '-'`
MODULE_PATH=/lib/modules/$KVER/offload
BUS=`cat ${MODULE_PATH}/hif_type`

###################################################################
## The input parameter is either up or down.  We assume that
## if no argument is provided, UP is intended
###################################################################

echo "Args: $#"

if [ $1 != down ]; then

    #
    # Determine if the modules are already up.  If so, simply
    # exit without error.
    #

    MODLIST=`lsmod | grep adf`

    if [ "${MODLIST}" != "" ]; then
        rm -f /tmp/.apup
        exit 0
	fi

#
# Finally, insert the modules
#

# insert ofload modules
MODULE_PATH=/lib/modules/$KVER/offload
    insmod $MODULE_PATH/adf.ko
    insmod $MODULE_PATH/hif_${BUS}.ko tgt_if="eth0.2"
    insmod $MODULE_PATH/fwd.ko
    insmod $MODULE_PATH/atd.ko
#    sleep 10

# Remove the temporary file to notify VAP creation  is successful
   rm -f /tmp/.apup

    # Wait for radio interfaces to be created
    if [ "$ATH_countrycode" != "" ]; then
    	WIFI=`ifconfig -a | grep wifi`
    	COUNT=11
		
	while [ 1 ]
	do 
        
        if [ "$WIFI" != "" ]; then 
                break
        else
                COUNT=`expr $COUNT - 1`
                if [ $COUNT = 0 ]; then
                echo "Timeout waiting for radio interfaces to be created" 
                exit 255
                fi

        sleep 1
        WIFI=`ifconfig -a | grep wifi`

        fi
        done

    fi
    sleep 1

#
# If Country Code has been specified, it needs to be set here using
# the iwpriv command.  This will be common for all VAPs
#

    if [ "$ATH_countrycode" != "" ]; then
        iwpriv wifi0 setCountryID $ATH_countrycode

        ##
        ## Check the result of this command.  If the country code
        ## is invalid, it will return a non-zero result.  We should
        ## die a horrible death in this case
        ##

        if [ $? != 0 ]; then
                 _ath_unload
                exit 255
        fi

        iwpriv wifi1 setCountryID $ATH_countrycode
        iwpriv wifi2 setCountryID $ATH_countrycode
        iwpriv wifi3 setCountryID $ATH_countrycode

        ##
        ## Don't check this one.  If the second module is not installed, we will
        ## get an error code.  If the country code is invalid, it was invalid for
        ## the previous call, so we won't get here anyway
        ##

        exit 0
    fi


else
#
# First, check to see if all of the VAPs have been eliminated
# If not, kill them all.  Don't continue, since this script
# will be called by killVAP all
#

        _ath_unload
fi
